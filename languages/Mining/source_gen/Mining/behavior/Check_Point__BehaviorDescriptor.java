package Mining.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBHDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.List;
import jetbrains.mps.core.aspects.behaviour.api.SMethod;
import java.util.Arrays;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.core.aspects.behaviour.api.SConstructor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.core.aspects.behaviour.api.BHMethodNotFoundException;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SConcept;

public final class Check_Point__BehaviorDescriptor extends BaseBHDescriptor {
  private static final SAbstractConcept CONCEPT = MetaAdapterFactory.getConcept(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x5d25b8d4c26819d4L, "Mining.structure.Check_Point");


  private static final List<SMethod<?>> BH_METHODS = Arrays.<SMethod<?>>asList();

  private static void ___init___(@NotNull SNode __thisNode__) {
    SLinkOperations.setPointer(SLinkOperations.addNewChild(__thisNode__, LINKS.iotDevices$Zd2V, CONCEPTS.Sensor$8w), LINKS.type$LV3W, new SNodePointer("r:5552b29e-123f-4e1b-bd45-eba3e20c482a(Mining.sandbox)", "5563019498923139515"));
    SLinkOperations.setPointer(SLinkOperations.addNewChild(__thisNode__, LINKS.iotDevices$Zd2V, CONCEPTS.Sensor$8w), LINKS.type$LV3W, new SNodePointer("r:5552b29e-123f-4e1b-bd45-eba3e20c482a(Mining.sandbox)", "6711974043599772139"));
    SLinkOperations.setPointer(SLinkOperations.addNewChild(__thisNode__, LINKS.iotDevices$Zd2V, CONCEPTS.Sensor$8w), LINKS.type$LV3W, new SNodePointer("r:5552b29e-123f-4e1b-bd45-eba3e20c482a(Mining.sandbox)", "6711974043599772140"));
  }


  /*package*/ Check_Point__BehaviorDescriptor() {
  }

  @Override
  protected void initNode(@NotNull SNode node, @NotNull SConstructor constructor, @Nullable Object[] parameters) {
    ___init___(node);
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SNode node, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @Override
  protected <T> T invokeSpecial0(@NotNull SAbstractConcept concept, @NotNull SMethod<T> method, @Nullable Object[] parameters) {
    int methodIndex = BH_METHODS.indexOf(method);
    if (methodIndex < 0) {
      throw new BHMethodNotFoundException(this, method);
    }
    switch (methodIndex) {
      default:
        throw new BHMethodNotFoundException(this, method);
    }
  }

  @NotNull
  @Override
  public List<SMethod<?>> getDeclaredMethods() {
    return BH_METHODS;
  }

  @NotNull
  @Override
  public SAbstractConcept getConcept() {
    return CONCEPT;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink iotDevices$Zd2V = MetaAdapterFactory.getContainmentLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x5d25b8d4c26819d4L, 0x5d25b8d4c26819d6L, "iotDevices");
    /*package*/ static final SReferenceLink type$LV3W = MetaAdapterFactory.getReferenceLink(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6875c5L, 0x23381bd32c6875c8L, "type");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Sensor$8w = MetaAdapterFactory.getConcept(0x222ccd66f9d64014L, 0x8569354bddee8138L, 0x23381bd32c6875c5L, "Mining.structure.Sensor");
  }
}
